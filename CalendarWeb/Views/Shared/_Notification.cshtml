@if (TempData["success"] != null)
{
    <div class="toast align-items-center border-0" role="alert">
        <div class="d-flex">
            <div class="toast-body">
                @TempData["success"]
            </div>

            <button type="button" class="me-2 m-auto bg-white border border-white" data-bs-dismiss="toast" aria-label="Close">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-circle" viewBox="0 0 16 16">
                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                    <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708" />
                </svg>
            </button>
        </div>
    </div>

    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script type="text/javascript">
        var toastElList = [].slice.call(document.querySelectorAll('.toast'))
        var toastList = toastElList.map(function (toastEl) {
            return (new bootstrap.Toast(toastEl))
        })

        toastList.forEach(toast => toast.show())
    </script>
}

@if (TempData["error"] != null)
{
    <div class="toast align-items-center text-white bg-danger border-0" aria-live="assertive" aria-atomic="true" role="alert">
        <div class="d-flex">
            <div class="toast-body">
                @TempData["success"]
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>

    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script type="text/javascript">
        var toastElList = [].slice.call(document.querySelectorAll('.toast'))
        var toastList = toastElList.map(function (toastEl) {
            return (new bootstrap.Toast(toastEl))
        })

        toastList.forEach(toast => toast.show())
    </script>
}